{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst startBtn = document.querySelector('[data-start]');\nconst dateTimePicker = document.getElementById(\"datetime-picker\");\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\nlet userSelectedDate = null;\nlet intervalId = null;\n\nstartBtn.disabled = true;\n\nflatpickr(dateTimePicker, {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate < new Date()) {\n      alert(\"Please choose a date in the future\");\n      startBtn.disabled = true;\n    } else {\n      startBtn.disabled = false;\n    }\n  },\n});\n\nstartBtn.addEventListener('click', () => {\n  if (intervalId) {\n    clearInterval(intervalId);\n  }\n\n  startBtn.disabled = true;\n  dateTimePicker.disabled = true;\n\n  intervalId = setInterval(() => {\n    const now = new Date();\n    const timeRemaining = userSelectedDate - now;\n\n    if (timeRemaining <= 0) {\n      clearInterval(intervalId);\n      updateTimerDisplay(0, 0, 0, 0);\n      dateTimePicker.disabled = false;\n      return;\n    }\n\n    const { days, hours, minutes, seconds } = convertMs(timeRemaining);\n    updateTimerDisplay(days, hours, minutes, seconds);\n  }, 1000);\n});\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction updateTimerDisplay(days, hours, minutes, seconds) {\n  daysEl.textContent = days;\n  hoursEl.textContent = addLeadingZero(hours);\n  minutesEl.textContent = addLeadingZero(minutes);\n  secondsEl.textContent = addLeadingZero(seconds);\n}\n\n\n"],"names":["startBtn","dateTimePicker","daysEl","hoursEl","minutesEl","secondsEl","userSelectedDate","intervalId","flatpickr","selectedDates","timeRemaining","updateTimerDisplay","days","hours","minutes","seconds","convertMs","ms","addLeadingZero","value"],"mappings":"oGAKA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAiB,SAAS,eAAe,iBAAiB,EAC1DC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EACzD,IAAIC,EAAmB,KACnBC,EAAa,KAEjBP,EAAS,SAAW,GAEpBQ,EAAUP,EAAgB,CACxB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQQ,EAAe,CACrBH,EAAmBG,EAAc,CAAC,EAC9BH,EAAmB,IAAI,MACzB,MAAM,oCAAoC,EAC1CN,EAAS,SAAW,IAEpBA,EAAS,SAAW,EAEvB,CACH,CAAC,EAEDA,EAAS,iBAAiB,QAAS,IAAM,CACnCO,GACF,cAAcA,CAAU,EAG1BP,EAAS,SAAW,GACpBC,EAAe,SAAW,GAE1BM,EAAa,YAAY,IAAM,CAE7B,MAAMG,EAAgBJ,EADV,IAAI,KAGhB,GAAII,GAAiB,EAAG,CACtB,cAAcH,CAAU,EACxBI,EAAmB,EAAG,EAAG,EAAG,CAAC,EAC7BV,EAAe,SAAW,GAC1B,MACD,CAED,KAAM,CAAE,KAAAW,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUN,CAAa,EACjEC,EAAmBC,EAAMC,EAAOC,EAASC,CAAO,CACjD,EAAE,GAAI,CACT,CAAC,EAED,SAASC,EAAUC,EAAI,CAMrB,MAAML,EAAO,KAAK,MAAMK,EAAK,KAAG,EAC1BJ,EAAQ,KAAK,MAAOI,EAAK,MAAO,IAAI,EACpCH,EAAU,KAAK,MAAQG,EAAK,MAAO,KAAQ,GAAM,EACjDF,EAAU,KAAK,MAASE,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASG,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASR,EAAmBC,EAAMC,EAAOC,EAASC,EAAS,CACzDb,EAAO,YAAcU,EACrBT,EAAQ,YAAce,EAAeL,CAAK,EAC1CT,EAAU,YAAcc,EAAeJ,CAAO,EAC9CT,EAAU,YAAca,EAAeH,CAAO,CAChD"}